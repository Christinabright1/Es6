# Es6
JAVASCRIPT ITERATORS, OBJECTS, AND CLASSES

Books-â€˜N-Stuff carries three different types of media: books, CDs, and movies. In this project you will create a parent class named Media with three subclasses: Book, Movie, and CD. These three subclasses have the following properties and methods:

Book
Properties: author (string), title (string), pages (number), isCheckedOut (boolean, initially false), and ratings (array, initially empty).
Getters: all properties have a getter
Methods: .getAverageRating(), .toggleCheckOutStatus(), and .addRating()
Movie
Properties: director (string), title (string), runTime (number), isCheckedOut (boolean, initially false), and ratings (array, initially empty)
Getters: all properties have a getter
Methods: .getAverageRating(), .toggleCheckOutStatus(), and .addRating()
CD
Properties: artist (string), title (string), isCheckedOut (boolean, initially false), and ratings (array, initially empty), songs (array of strings)
Getters: all properties have a getter
Methods: .getAverageRating(), .toggleCheckOutStatus(), and .addRating()


   class Media {
  constructor(title){
 this._title= title;
 this._ratings= [];
 this._isCheckedOut = false;
  }
  get title(){
    return this._title;
  }
  get isCheckedOut(){
    return this._isCheckedOut;
  }
  get ratings(){
    return this._ratings;
  }
  
  //Create a setter for the isCheckedOut property
   //setter methods are used to change the values of an object
   set isCheckedOut(checking){
    return this._isCheckedOut= checking;
   }
  toggleCheckOutStatus (){
    return !this._isCheckedOut;
  }
  getAverageRating (){
    const sumofRating= this._ratings.reduce((acc, curr) => acc + curr, 0);
    return sumofRating/this._ratings.length;
  }
    addRating(rating){
   return this._ratings.push(rating);
    }
}

//build Book that extends Media
class Book extends Media{
  constructor(author,title,pages){
    super(title);
    this._author = author;
    this._page = pages;
  }
  get author(){
    return this.author;
  }
  get pages(){
    return this._pages;
  }
}
 //create class movie

 class Movie extends Media {
   constructor(director,title,runTime){
     super(title);
     this._director= director;
     this._runTime = runTime;
   }
   get director(){
     return this._director;
   }
   get runTime(){
     return this._runTime;
   }
 }
 //Create a CD class that extends Media
  class CD extends Media {
    super();
  }
  
  //create Book instance
 const  historyOfEverything= new Book('Bill Bryson', 'A Short History of Nearly Everything',544);
 console.log(historyOfEverything);
 historyOfEverything.toggleCheckOutStatus();
 console.log(historyOfEverything.toggleCheckOutStatus());

historyOfEverything.addRating(4);
historyOfEverything.addRating(5);
historyOfEverything.addRating(5);
console.log(historyOfEverything.addRating(5));
historyOfEverything.getAverageRating();

console.log(historyOfEverything.getAverageRating());
//create Movie instance
const speed= new Movie('Jan de Bont','Speed','116');
speed.toggleCheckOutStatus();
console.log(speed.isCheckedOut);
speed.addRating(1);
speed.addRating(1);
speed.addRating(5);
console.log(speed.getAverageRating());
